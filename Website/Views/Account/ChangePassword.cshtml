@model Website.Entities.LoginData
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}
@{
    ViewData["Title"] = "ChangeLogin";
}

<h1>ChangeLogin</h1>

<h4>LoginData</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("SavePassword", "Account", FormMethod.Post))
        {
            <form asp-action="ChangeLogin">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label name="currentPassword" class="control-label">Current Password</label>
                    <input name="currentPassword" class="form-control" type="password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password" class="control-label">New password</label>
                    <input asp-for="Password" class="form-control" type="password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save Password" class="btn btn-primary" />
                </div>
            </form>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to Account</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
