<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Website</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Website.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
</head>
<body class="d-flex">
    <header class="sidebar box-shadow bg-white">
        <nav class="d-flex flex-column p-4 pt-5 h-100 justify-content-between">
            <a class="navbar-brand fw-bold text-center" asp-area="" asp-controller="Home" asp-action="Index">HR Manager Pro</a>
            <div class="menu-items pe-2 flex-fill">
                <ul class="d-flex flex-column pt-4">
                    <li class="btn-gradient mb-2">
                        <a class="nav-link text-dark w-100 " asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                    </li>
                    @{
                        string? role = Context.Session.GetString("R_Name");
                        if (role == "Admin")
                        {
                            await Html.RenderPartialAsync("MenuTypes/_admin.cshtml");
                        }
                        else if (role == "Manager")
                        {
                            await Html.RenderPartialAsync("MenuTypes/_manager.cshtml");
                        }
                        else if (role == "Employee")
                        {
                            await Html.RenderPartialAsync("MenuTypes/_employee.cshtml");
                        }
                    }
                </ul>
            </div>
        </nav>
    </header>
    <div class="menu-toggle box-shadow">
        <i class="fa-solid fa-bars"></i>
    </div>
    <div class="d-flex flex-column page position-relative">
        <div>
            @{
                string? error = Context.Session.GetString("Error");
                if (error != null)
                {
                    <div class="d-flex top-error justify-content-center p-3 bg-light box-shadow">
                        <p>@error</p>
                    </div>
                    Context.Session.Remove("Error");
                }
            }
        </div>

        <div class="d-flex justify-content-end p-3">
            @{
                if (role == null)
                {
                    <a class="nav-link text-dark d-flex " asp-area="" asp-controller="Account" asp-action="Login">
                        <i class="fa-solid fa-user" title="Login"></i>
                    </a>
                }
                else
                {
                    <p class="nav-link text-dark"><span><strong>@Context.Session.GetString("U_Name")</strong> | @Context.Session.GetString("R_Name")</span></p>
                    <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Index">
                        <i class="fa-solid fa-user" title="My account"></i>
                    </a>
                    <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Logout">
                        <i class="fa-solid fa-right-from-bracket" title="Logout"></i>
                    </a>
                }
            }
        </div>

        <div class="p-4">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
<script>

    function getCookie(name) {
        var cookies = document.cookie.split(';');
        for (var i = 0; i < cookies.length; i++) {
            var cookie = cookies[i].trim();
            if (cookie.startsWith(name + '=')) {
                return cookie.substring(name.length + 1);
            }
        }
        return null;
    }


    function refreshPageIfError() {
        if (getCookie("Error")) {
            location.reload(true);
            console.log("jest");
        }
        else {
            console.log("nie ma");
        }
    }

    setInterval(refreshPageIfError, 1000);
</script>